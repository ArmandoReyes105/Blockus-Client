//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blockus_Client.BlockusService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class AccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((this.ProfileImageField.Equals(value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultsDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class ResultsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LossesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VictoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAccount {
            get {
                return this.IdAccountField;
            }
            set {
                if ((this.IdAccountField.Equals(value) != true)) {
                    this.IdAccountField = value;
                    this.RaisePropertyChanged("IdAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Losses {
            get {
                return this.LossesField;
            }
            set {
                if ((this.LossesField.Equals(value) != true)) {
                    this.LossesField = value;
                    this.RaisePropertyChanged("Losses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Victories {
            get {
                return this.VictoriesField;
            }
            set {
                if ((this.VictoriesField.Equals(value) != true)) {
                    this.VictoriesField = value;
                    this.RaisePropertyChanged("Victories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileConfigurationDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class ProfileConfigurationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoardStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TilesStyleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoardStyle {
            get {
                return this.BoardStyleField;
            }
            set {
                if ((this.BoardStyleField.Equals(value) != true)) {
                    this.BoardStyleField = value;
                    this.RaisePropertyChanged("BoardStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAccount {
            get {
                return this.IdAccountField;
            }
            set {
                if ((this.IdAccountField.Equals(value) != true)) {
                    this.IdAccountField = value;
                    this.RaisePropertyChanged("IdAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TilesStyle {
            get {
                return this.TilesStyleField;
            }
            set {
                if ((this.TilesStyleField.Equals(value) != true)) {
                    this.TilesStyleField = value;
                    this.RaisePropertyChanged("TilesStyle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicAccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class PublicAccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((this.ProfileImageField.Equals(value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class MatchDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.GameType MatchTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Blockus_Client.BlockusService.Color, Blockus_Client.BlockusService.PublicAccountDTO> PlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchCode {
            get {
                return this.MatchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchCodeField, value) != true)) {
                    this.MatchCodeField = value;
                    this.RaisePropertyChanged("MatchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.GameType MatchType {
            get {
                return this.MatchTypeField;
            }
            set {
                if ((this.MatchTypeField.Equals(value) != true)) {
                    this.MatchTypeField = value;
                    this.RaisePropertyChanged("MatchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPlayers {
            get {
                return this.NumberOfPlayersField;
            }
            set {
                if ((this.NumberOfPlayersField.Equals(value) != true)) {
                    this.NumberOfPlayersField = value;
                    this.RaisePropertyChanged("NumberOfPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Blockus_Client.BlockusService.Color, Blockus_Client.BlockusService.PublicAccountDTO> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameType", Namespace="http://schemas.datacontract.org/2004/07/Services.Enums")]
    public enum GameType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Private = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Public = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Color", Namespace="http://schemas.datacontract.org/2004/07/Services.Enums")]
    public enum Color : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Red = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yellow = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Green = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class BlockDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.Block BlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.Color ColorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.Block Block {
            get {
                return this.BlockField;
            }
            set {
                if ((this.BlockField.Equals(value) != true)) {
                    this.BlockField = value;
                    this.RaisePropertyChanged("Block");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.Color Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Block", Namespace="http://schemas.datacontract.org/2004/07/Services.Enums")]
    public enum Block : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block01 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block02 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block03 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block04 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block05 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block06 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block07 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block08 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block09 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block10 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block11 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block12 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block13 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block14 = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block15 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block16 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block17 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block18 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block19 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block20 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Block21 = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameResult", Namespace="http://schemas.datacontract.org/2004/07/Services.Enums")]
    public enum GameResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Winner = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Losser = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movement", Namespace="http://schemas.datacontract.org/2004/07/Services.Enums")]
    public enum Movement : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Up = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Down = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RotationCW = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RotationCCW = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchResumeDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class MatchResumeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.PlayerState[] PlayerListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.PlayerState WinnerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchCode {
            get {
                return this.MatchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchCodeField, value) != true)) {
                    this.MatchCodeField = value;
                    this.RaisePropertyChanged("MatchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.PlayerState[] PlayerList {
            get {
                return this.PlayerListField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerListField, value) != true)) {
                    this.PlayerListField = value;
                    this.RaisePropertyChanged("PlayerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.PlayerState Winner {
            get {
                return this.WinnerField;
            }
            set {
                if ((object.ReferenceEquals(this.WinnerField, value) != true)) {
                    this.WinnerField = value;
                    this.RaisePropertyChanged("Winner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerState", Namespace="http://schemas.datacontract.org/2004/07/Services.MatchState")]
    [System.SerializableAttribute()]
    public partial class PlayerState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.Block[] BlocksListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.Color ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PuntuationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.Block[] BlocksList {
            get {
                return this.BlocksListField;
            }
            set {
                if ((object.ReferenceEquals(this.BlocksListField, value) != true)) {
                    this.BlocksListField = value;
                    this.RaisePropertyChanged("BlocksList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.Color Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Puntuation {
            get {
                return this.PuntuationField;
            }
            set {
                if ((this.PuntuationField.Equals(value) != true)) {
                    this.PuntuationField = value;
                    this.RaisePropertyChanged("Puntuation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateAccount", ReplyAction="http://tempuri.org/IAccountService/CreateAccountResponse")]
        int CreateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateAccount", ReplyAction="http://tempuri.org/IAccountService/CreateAccountResponse")]
        System.Threading.Tasks.Task<int> CreateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountResponse")]
        int UpdateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountResponse")]
        System.Threading.Tasks.Task<int> UpdateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountResults", ReplyAction="http://tempuri.org/IAccountService/GetAccountResultsResponse")]
        Blockus_Client.BlockusService.ResultsDTO GetAccountResults(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountResults", ReplyAction="http://tempuri.org/IAccountService/GetAccountResultsResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.ResultsDTO> GetAccountResultsAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetProfileConfiguration", ReplyAction="http://tempuri.org/IAccountService/GetProfileConfigurationResponse")]
        Blockus_Client.BlockusService.ProfileConfigurationDTO GetProfileConfiguration(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetProfileConfiguration", ReplyAction="http://tempuri.org/IAccountService/GetProfileConfigurationResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.ProfileConfigurationDTO> GetProfileConfigurationAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddFriend", ReplyAction="http://tempuri.org/IAccountService/AddFriendResponse")]
        int AddFriend(int idAccount, int IdAccountFriend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddFriend", ReplyAction="http://tempuri.org/IAccountService/AddFriendResponse")]
        System.Threading.Tasks.Task<int> AddFriendAsync(int idAccount, int IdAccountFriend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAddedFriends", ReplyAction="http://tempuri.org/IAccountService/GetAddedFriendsResponse")]
        Blockus_Client.BlockusService.PublicAccountDTO[] GetAddedFriends(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAddedFriends", ReplyAction="http://tempuri.org/IAccountService/GetAddedFriendsResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> GetAddedFriendsAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteFriend", ReplyAction="http://tempuri.org/IAccountService/DeleteFriendResponse")]
        int DeleteFriend(int idFriend, int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteFriend", ReplyAction="http://tempuri.org/IAccountService/DeleteFriendResponse")]
        System.Threading.Tasks.Task<int> DeleteFriendAsync(int idFriend, int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchByUsername", ReplyAction="http://tempuri.org/IAccountService/SearchByUsernameResponse")]
        Blockus_Client.BlockusService.PublicAccountDTO[] SearchByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchByUsername", ReplyAction="http://tempuri.org/IAccountService/SearchByUsernameResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> SearchByUsernameAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : Blockus_Client.BlockusService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<Blockus_Client.BlockusService.IAccountService>, Blockus_Client.BlockusService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.CreateAccount(accountDTO);
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.CreateAccountAsync(accountDTO);
        }
        
        public int UpdateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.UpdateAccount(accountDTO);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.UpdateAccountAsync(accountDTO);
        }
        
        public Blockus_Client.BlockusService.ResultsDTO GetAccountResults(int idAccount) {
            return base.Channel.GetAccountResults(idAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.ResultsDTO> GetAccountResultsAsync(int idAccount) {
            return base.Channel.GetAccountResultsAsync(idAccount);
        }
        
        public Blockus_Client.BlockusService.ProfileConfigurationDTO GetProfileConfiguration(int idAccount) {
            return base.Channel.GetProfileConfiguration(idAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.ProfileConfigurationDTO> GetProfileConfigurationAsync(int idAccount) {
            return base.Channel.GetProfileConfigurationAsync(idAccount);
        }
        
        public int AddFriend(int idAccount, int IdAccountFriend) {
            return base.Channel.AddFriend(idAccount, IdAccountFriend);
        }
        
        public System.Threading.Tasks.Task<int> AddFriendAsync(int idAccount, int IdAccountFriend) {
            return base.Channel.AddFriendAsync(idAccount, IdAccountFriend);
        }
        
        public Blockus_Client.BlockusService.PublicAccountDTO[] GetAddedFriends(int idAccount) {
            return base.Channel.GetAddedFriends(idAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> GetAddedFriendsAsync(int idAccount) {
            return base.Channel.GetAddedFriendsAsync(idAccount);
        }
        
        public int DeleteFriend(int idFriend, int idAccount) {
            return base.Channel.DeleteFriend(idFriend, idAccount);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFriendAsync(int idFriend, int idAccount) {
            return base.Channel.DeleteFriendAsync(idFriend, idAccount);
        }
        
        public Blockus_Client.BlockusService.PublicAccountDTO[] SearchByUsername(string username) {
            return base.Channel.SearchByUsername(username);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> SearchByUsernameAsync(string username) {
            return base.Channel.SearchByUsernameAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.ISessionService")]
    public interface ISessionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogIn", ReplyAction="http://tempuri.org/ISessionService/LogInResponse")]
        Blockus_Client.BlockusService.AccountDTO LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogIn", ReplyAction="http://tempuri.org/ISessionService/LogInResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.AccountDTO> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogOut", ReplyAction="http://tempuri.org/ISessionService/LogOutResponse")]
        void LogOut(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogOut", ReplyAction="http://tempuri.org/ISessionService/LogOutResponse")]
        System.Threading.Tasks.Task LogOutAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionServiceChannel : Blockus_Client.BlockusService.ISessionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionServiceClient : System.ServiceModel.ClientBase<Blockus_Client.BlockusService.ISessionService>, Blockus_Client.BlockusService.ISessionService {
        
        public SessionServiceClient() {
        }
        
        public SessionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Blockus_Client.BlockusService.AccountDTO LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.AccountDTO> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public void LogOut(string username) {
            base.Channel.LogOut(username);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(string username) {
            return base.Channel.LogOutAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.IMatchMakingService", CallbackContract=typeof(Blockus_Client.BlockusService.IMatchMakingServiceCallback))]
    public interface IMatchMakingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchMakingService/CreateMatchResponse")]
        Blockus_Client.BlockusService.MatchDTO CreateMatch(Blockus_Client.BlockusService.PublicAccountDTO hostAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchMakingService/CreateMatchResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> CreateMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO hostAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/JoinToMatch", ReplyAction="http://tempuri.org/IMatchMakingService/JoinToMatchResponse")]
        Blockus_Client.BlockusService.MatchDTO JoinToMatch(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/JoinToMatch", ReplyAction="http://tempuri.org/IMatchMakingService/JoinToMatchResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> JoinToMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchMakingService/LeaveMatch")]
        void LeaveMatch(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchMakingService/LeaveMatch")]
        System.Threading.Tasks.Task LeaveMatchAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchMakingServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/NotifyPlayerEntry", ReplyAction="http://tempuri.org/IMatchMakingService/NotifyPlayerEntryResponse")]
        void NotifyPlayerEntry(Blockus_Client.BlockusService.MatchDTO matchDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/NotifyPlayerExit", ReplyAction="http://tempuri.org/IMatchMakingService/NotifyPlayerExitResponse")]
        void NotifyPlayerExit(Blockus_Client.BlockusService.MatchDTO matchDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/NotifyHostExit", ReplyAction="http://tempuri.org/IMatchMakingService/NotifyHostExitResponse")]
        void NotifyHostExit(Blockus_Client.BlockusService.MatchDTO matchDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchMakingServiceChannel : Blockus_Client.BlockusService.IMatchMakingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchMakingServiceClient : System.ServiceModel.DuplexClientBase<Blockus_Client.BlockusService.IMatchMakingService>, Blockus_Client.BlockusService.IMatchMakingService {
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Blockus_Client.BlockusService.MatchDTO CreateMatch(Blockus_Client.BlockusService.PublicAccountDTO hostAccount) {
            return base.Channel.CreateMatch(hostAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> CreateMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO hostAccount) {
            return base.Channel.CreateMatchAsync(hostAccount);
        }
        
        public Blockus_Client.BlockusService.MatchDTO JoinToMatch(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode) {
            return base.Channel.JoinToMatch(account, matchCode);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> JoinToMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode) {
            return base.Channel.JoinToMatchAsync(account, matchCode);
        }
        
        public void LeaveMatch(string username) {
            base.Channel.LeaveMatch(username);
        }
        
        public System.Threading.Tasks.Task LeaveMatchAsync(string username) {
            return base.Channel.LeaveMatchAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.IChatService", CallbackContract=typeof(Blockus_Client.BlockusService.IChatServiceCallback))]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/JoinToChat", ReplyAction="http://tempuri.org/IChatService/JoinToChatResponse")]
        void JoinToChat(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/JoinToChat", ReplyAction="http://tempuri.org/IChatService/JoinToChatResponse")]
        System.Threading.Tasks.Task JoinToChatAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/SendMessage", ReplyAction="http://tempuri.org/IChatService/SendMessageResponse")]
        void SendMessage(string username, string matchCode, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/SendMessage", ReplyAction="http://tempuri.org/IChatService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string username, string matchCode, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/LeaveChat", ReplyAction="http://tempuri.org/IChatService/LeaveChatResponse")]
        void LeaveChat(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/LeaveChat", ReplyAction="http://tempuri.org/IChatService/LeaveChatResponse")]
        System.Threading.Tasks.Task LeaveChatAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/OnReciveMessage", ReplyAction="http://tempuri.org/IChatService/OnReciveMessageResponse")]
        void OnReciveMessage(string username, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : Blockus_Client.BlockusService.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.DuplexClientBase<Blockus_Client.BlockusService.IChatService>, Blockus_Client.BlockusService.IChatService {
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void JoinToChat(string username) {
            base.Channel.JoinToChat(username);
        }
        
        public System.Threading.Tasks.Task JoinToChatAsync(string username) {
            return base.Channel.JoinToChatAsync(username);
        }
        
        public void SendMessage(string username, string matchCode, string message) {
            base.Channel.SendMessage(username, matchCode, message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string username, string matchCode, string message) {
            return base.Channel.SendMessageAsync(username, matchCode, message);
        }
        
        public void LeaveChat(string username) {
            base.Channel.LeaveChat(username);
        }
        
        public System.Threading.Tasks.Task LeaveChatAsync(string username) {
            return base.Channel.LeaveChatAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.IMatchService", CallbackContract=typeof(Blockus_Client.BlockusService.IMatchServiceCallback))]
    public interface IMatchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/JoinToActiveMatch", ReplyAction="http://tempuri.org/IMatchService/JoinToActiveMatchResponse")]
        Blockus_Client.BlockusService.MatchDTO JoinToActiveMatch(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/JoinToActiveMatch", ReplyAction="http://tempuri.org/IMatchService/JoinToActiveMatchResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> JoinToActiveMatchAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/GetCurrentBlock", ReplyAction="http://tempuri.org/IMatchService/GetCurrentBlockResponse")]
        Blockus_Client.BlockusService.BlockDTO GetCurrentBlock(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/GetCurrentBlock", ReplyAction="http://tempuri.org/IMatchService/GetCurrentBlockResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.BlockDTO> GetCurrentBlockAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/PlaceBlock", ReplyAction="http://tempuri.org/IMatchService/PlaceBlockResponse")]
        Blockus_Client.BlockusService.GameResult PlaceBlock(string matchCode, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/PlaceBlock", ReplyAction="http://tempuri.org/IMatchService/PlaceBlockResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.GameResult> PlaceBlockAsync(string matchCode, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/MakeMovement", ReplyAction="http://tempuri.org/IMatchService/MakeMovementResponse")]
        void MakeMovement(string matchCode, Blockus_Client.BlockusService.Movement movement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/MakeMovement", ReplyAction="http://tempuri.org/IMatchService/MakeMovementResponse")]
        System.Threading.Tasks.Task MakeMovementAsync(string matchCode, Blockus_Client.BlockusService.Movement movement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/SkipTurn", ReplyAction="http://tempuri.org/IMatchService/SkipTurnResponse")]
        Blockus_Client.BlockusService.GameResult SkipTurn(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/SkipTurn", ReplyAction="http://tempuri.org/IMatchService/SkipTurnResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.GameResult> SkipTurnAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/LeaveActiveMatch", ReplyAction="http://tempuri.org/IMatchService/LeaveActiveMatchResponse")]
        void LeaveActiveMatch(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/LeaveActiveMatch", ReplyAction="http://tempuri.org/IMatchService/LeaveActiveMatchResponse")]
        System.Threading.Tasks.Task LeaveActiveMatchAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/OnBlockPlaced", ReplyAction="http://tempuri.org/IMatchService/OnBlockPlacedResponse")]
        void OnBlockPlaced();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/OnCurrentBlockChanged", ReplyAction="http://tempuri.org/IMatchService/OnCurrentBlockChangedResponse")]
        void OnCurrentBlockChanged(Blockus_Client.BlockusService.BlockDTO block);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/OnOpponentMovement", ReplyAction="http://tempuri.org/IMatchService/OnOpponentMovementResponse")]
        void OnOpponentMovement(Blockus_Client.BlockusService.Movement movement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/OnGameFinished", ReplyAction="http://tempuri.org/IMatchService/OnGameFinishedResponse")]
        void OnGameFinished(Blockus_Client.BlockusService.GameResult gameResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchService/OnPlayerLeave", ReplyAction="http://tempuri.org/IMatchService/OnPlayerLeaveResponse")]
        void OnPlayerLeave(string username, Blockus_Client.BlockusService.Color color);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchServiceChannel : Blockus_Client.BlockusService.IMatchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchServiceClient : System.ServiceModel.DuplexClientBase<Blockus_Client.BlockusService.IMatchService>, Blockus_Client.BlockusService.IMatchService {
        
        public MatchServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Blockus_Client.BlockusService.MatchDTO JoinToActiveMatch(string username) {
            return base.Channel.JoinToActiveMatch(username);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> JoinToActiveMatchAsync(string username) {
            return base.Channel.JoinToActiveMatchAsync(username);
        }
        
        public Blockus_Client.BlockusService.BlockDTO GetCurrentBlock(string matchCode) {
            return base.Channel.GetCurrentBlock(matchCode);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.BlockDTO> GetCurrentBlockAsync(string matchCode) {
            return base.Channel.GetCurrentBlockAsync(matchCode);
        }
        
        public Blockus_Client.BlockusService.GameResult PlaceBlock(string matchCode, int points) {
            return base.Channel.PlaceBlock(matchCode, points);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.GameResult> PlaceBlockAsync(string matchCode, int points) {
            return base.Channel.PlaceBlockAsync(matchCode, points);
        }
        
        public void MakeMovement(string matchCode, Blockus_Client.BlockusService.Movement movement) {
            base.Channel.MakeMovement(matchCode, movement);
        }
        
        public System.Threading.Tasks.Task MakeMovementAsync(string matchCode, Blockus_Client.BlockusService.Movement movement) {
            return base.Channel.MakeMovementAsync(matchCode, movement);
        }
        
        public Blockus_Client.BlockusService.GameResult SkipTurn(string matchCode) {
            return base.Channel.SkipTurn(matchCode);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.GameResult> SkipTurnAsync(string matchCode) {
            return base.Channel.SkipTurnAsync(matchCode);
        }
        
        public void LeaveActiveMatch(string username) {
            base.Channel.LeaveActiveMatch(username);
        }
        
        public System.Threading.Tasks.Task LeaveActiveMatchAsync(string username) {
            return base.Channel.LeaveActiveMatchAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.IResultsService")]
    public interface IResultsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResultsService/GetMatchResume", ReplyAction="http://tempuri.org/IResultsService/GetMatchResumeResponse")]
        Blockus_Client.BlockusService.MatchResumeDTO GetMatchResume(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResultsService/GetMatchResume", ReplyAction="http://tempuri.org/IResultsService/GetMatchResumeResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchResumeDTO> GetMatchResumeAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResultsService/UpdateResults", ReplyAction="http://tempuri.org/IResultsService/UpdateResultsResponse")]
        int UpdateResults(int idAccount, Blockus_Client.BlockusService.GameResult gameResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResultsService/UpdateResults", ReplyAction="http://tempuri.org/IResultsService/UpdateResultsResponse")]
        System.Threading.Tasks.Task<int> UpdateResultsAsync(int idAccount, Blockus_Client.BlockusService.GameResult gameResult);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IResultsServiceChannel : Blockus_Client.BlockusService.IResultsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResultsServiceClient : System.ServiceModel.ClientBase<Blockus_Client.BlockusService.IResultsService>, Blockus_Client.BlockusService.IResultsService {
        
        public ResultsServiceClient() {
        }
        
        public ResultsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ResultsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResultsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResultsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Blockus_Client.BlockusService.MatchResumeDTO GetMatchResume(string matchCode) {
            return base.Channel.GetMatchResume(matchCode);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchResumeDTO> GetMatchResumeAsync(string matchCode) {
            return base.Channel.GetMatchResumeAsync(matchCode);
        }
        
        public int UpdateResults(int idAccount, Blockus_Client.BlockusService.GameResult gameResult) {
            return base.Channel.UpdateResults(idAccount, gameResult);
        }
        
        public System.Threading.Tasks.Task<int> UpdateResultsAsync(int idAccount, Blockus_Client.BlockusService.GameResult gameResult) {
            return base.Channel.UpdateResultsAsync(idAccount, gameResult);
        }
    }
}

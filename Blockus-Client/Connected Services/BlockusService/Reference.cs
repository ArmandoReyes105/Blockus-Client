//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blockus_Client.BlockusService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class AccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((this.ProfileImageField.Equals(value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultsDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class ResultsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LossesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VictoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAccount {
            get {
                return this.IdAccountField;
            }
            set {
                if ((this.IdAccountField.Equals(value) != true)) {
                    this.IdAccountField = value;
                    this.RaisePropertyChanged("IdAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Losses {
            get {
                return this.LossesField;
            }
            set {
                if ((this.LossesField.Equals(value) != true)) {
                    this.LossesField = value;
                    this.RaisePropertyChanged("Losses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Victories {
            get {
                return this.VictoriesField;
            }
            set {
                if ((this.VictoriesField.Equals(value) != true)) {
                    this.VictoriesField = value;
                    this.RaisePropertyChanged("Victories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileConfigurationDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class ProfileConfigurationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoardStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TilesStyleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoardStyle {
            get {
                return this.BoardStyleField;
            }
            set {
                if ((this.BoardStyleField.Equals(value) != true)) {
                    this.BoardStyleField = value;
                    this.RaisePropertyChanged("BoardStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAccount {
            get {
                return this.IdAccountField;
            }
            set {
                if ((this.IdAccountField.Equals(value) != true)) {
                    this.IdAccountField = value;
                    this.RaisePropertyChanged("IdAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TilesStyle {
            get {
                return this.TilesStyleField;
            }
            set {
                if ((this.TilesStyleField.Equals(value) != true)) {
                    this.TilesStyleField = value;
                    this.RaisePropertyChanged("TilesStyle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicAccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class PublicAccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((this.ProfileImageField.Equals(value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.Dtos")]
    [System.SerializableAttribute()]
    public partial class MatchDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Blockus_Client.BlockusService.GameType MatchTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Blockus_Client.BlockusService.Color, Blockus_Client.BlockusService.PublicAccountDTO> PlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchCode {
            get {
                return this.MatchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchCodeField, value) != true)) {
                    this.MatchCodeField = value;
                    this.RaisePropertyChanged("MatchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Blockus_Client.BlockusService.GameType MatchType {
            get {
                return this.MatchTypeField;
            }
            set {
                if ((this.MatchTypeField.Equals(value) != true)) {
                    this.MatchTypeField = value;
                    this.RaisePropertyChanged("MatchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPlayers {
            get {
                return this.NumberOfPlayersField;
            }
            set {
                if ((this.NumberOfPlayersField.Equals(value) != true)) {
                    this.NumberOfPlayersField = value;
                    this.RaisePropertyChanged("NumberOfPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Blockus_Client.BlockusService.Color, Blockus_Client.BlockusService.PublicAccountDTO> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameType", Namespace="http://schemas.datacontract.org/2004/07/Services.Enums")]
    public enum GameType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Private = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Public = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Color", Namespace="http://schemas.datacontract.org/2004/07/Services.Enums")]
    public enum Color : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Red = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yellow = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Green = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateAccount", ReplyAction="http://tempuri.org/IAccountService/CreateAccountResponse")]
        int CreateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/CreateAccount", ReplyAction="http://tempuri.org/IAccountService/CreateAccountResponse")]
        System.Threading.Tasks.Task<int> CreateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountResponse")]
        int UpdateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IAccountService/UpdateAccountResponse")]
        System.Threading.Tasks.Task<int> UpdateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountResults", ReplyAction="http://tempuri.org/IAccountService/GetAccountResultsResponse")]
        Blockus_Client.BlockusService.ResultsDTO GetAccountResults(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountResults", ReplyAction="http://tempuri.org/IAccountService/GetAccountResultsResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.ResultsDTO> GetAccountResultsAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetProfileConfiguration", ReplyAction="http://tempuri.org/IAccountService/GetProfileConfigurationResponse")]
        Blockus_Client.BlockusService.ProfileConfigurationDTO GetProfileConfiguration(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetProfileConfiguration", ReplyAction="http://tempuri.org/IAccountService/GetProfileConfigurationResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.ProfileConfigurationDTO> GetProfileConfigurationAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddFriend", ReplyAction="http://tempuri.org/IAccountService/AddFriendResponse")]
        int AddFriend(int idAccount, int IdAccountFriend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddFriend", ReplyAction="http://tempuri.org/IAccountService/AddFriendResponse")]
        System.Threading.Tasks.Task<int> AddFriendAsync(int idAccount, int IdAccountFriend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAddedFriends", ReplyAction="http://tempuri.org/IAccountService/GetAddedFriendsResponse")]
        Blockus_Client.BlockusService.PublicAccountDTO[] GetAddedFriends(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAddedFriends", ReplyAction="http://tempuri.org/IAccountService/GetAddedFriendsResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> GetAddedFriendsAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteFriend", ReplyAction="http://tempuri.org/IAccountService/DeleteFriendResponse")]
        int DeleteFriend(int idFriend, int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DeleteFriend", ReplyAction="http://tempuri.org/IAccountService/DeleteFriendResponse")]
        System.Threading.Tasks.Task<int> DeleteFriendAsync(int idFriend, int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchByUsername", ReplyAction="http://tempuri.org/IAccountService/SearchByUsernameResponse")]
        Blockus_Client.BlockusService.PublicAccountDTO[] SearchByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SearchByUsername", ReplyAction="http://tempuri.org/IAccountService/SearchByUsernameResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> SearchByUsernameAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : Blockus_Client.BlockusService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<Blockus_Client.BlockusService.IAccountService>, Blockus_Client.BlockusService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.CreateAccount(accountDTO);
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.CreateAccountAsync(accountDTO);
        }
        
        public int UpdateAccount(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.UpdateAccount(accountDTO);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccountAsync(Blockus_Client.BlockusService.AccountDTO accountDTO) {
            return base.Channel.UpdateAccountAsync(accountDTO);
        }
        
        public Blockus_Client.BlockusService.ResultsDTO GetAccountResults(int idAccount) {
            return base.Channel.GetAccountResults(idAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.ResultsDTO> GetAccountResultsAsync(int idAccount) {
            return base.Channel.GetAccountResultsAsync(idAccount);
        }
        
        public Blockus_Client.BlockusService.ProfileConfigurationDTO GetProfileConfiguration(int idAccount) {
            return base.Channel.GetProfileConfiguration(idAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.ProfileConfigurationDTO> GetProfileConfigurationAsync(int idAccount) {
            return base.Channel.GetProfileConfigurationAsync(idAccount);
        }
        
        public int AddFriend(int idAccount, int IdAccountFriend) {
            return base.Channel.AddFriend(idAccount, IdAccountFriend);
        }
        
        public System.Threading.Tasks.Task<int> AddFriendAsync(int idAccount, int IdAccountFriend) {
            return base.Channel.AddFriendAsync(idAccount, IdAccountFriend);
        }
        
        public Blockus_Client.BlockusService.PublicAccountDTO[] GetAddedFriends(int idAccount) {
            return base.Channel.GetAddedFriends(idAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> GetAddedFriendsAsync(int idAccount) {
            return base.Channel.GetAddedFriendsAsync(idAccount);
        }
        
        public int DeleteFriend(int idFriend, int idAccount) {
            return base.Channel.DeleteFriend(idFriend, idAccount);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFriendAsync(int idFriend, int idAccount) {
            return base.Channel.DeleteFriendAsync(idFriend, idAccount);
        }
        
        public Blockus_Client.BlockusService.PublicAccountDTO[] SearchByUsername(string username) {
            return base.Channel.SearchByUsername(username);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.PublicAccountDTO[]> SearchByUsernameAsync(string username) {
            return base.Channel.SearchByUsernameAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.ISessionService")]
    public interface ISessionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogIn", ReplyAction="http://tempuri.org/ISessionService/LogInResponse")]
        Blockus_Client.BlockusService.AccountDTO LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogIn", ReplyAction="http://tempuri.org/ISessionService/LogInResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.AccountDTO> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogOut", ReplyAction="http://tempuri.org/ISessionService/LogOutResponse")]
        void LogOut(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/LogOut", ReplyAction="http://tempuri.org/ISessionService/LogOutResponse")]
        System.Threading.Tasks.Task LogOutAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionServiceChannel : Blockus_Client.BlockusService.ISessionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionServiceClient : System.ServiceModel.ClientBase<Blockus_Client.BlockusService.ISessionService>, Blockus_Client.BlockusService.ISessionService {
        
        public SessionServiceClient() {
        }
        
        public SessionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Blockus_Client.BlockusService.AccountDTO LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.AccountDTO> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public void LogOut(string username) {
            base.Channel.LogOut(username);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(string username) {
            return base.Channel.LogOutAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlockusService.IMatchMakingService", CallbackContract=typeof(Blockus_Client.BlockusService.IMatchMakingServiceCallback))]
    public interface IMatchMakingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchMakingService/CreateMatchResponse")]
        Blockus_Client.BlockusService.MatchDTO CreateMatch(Blockus_Client.BlockusService.PublicAccountDTO hostAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchMakingService/CreateMatchResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> CreateMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO hostAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/JoinToMatch", ReplyAction="http://tempuri.org/IMatchMakingService/JoinToMatchResponse")]
        Blockus_Client.BlockusService.MatchDTO JoinToMatch(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/JoinToMatch", ReplyAction="http://tempuri.org/IMatchMakingService/JoinToMatchResponse")]
        System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> JoinToMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchMakingService/LeaveMatch")]
        void LeaveMatch(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchMakingService/LeaveMatch")]
        System.Threading.Tasks.Task LeaveMatchAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchMakingServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/NotifyPlayerEntry", ReplyAction="http://tempuri.org/IMatchMakingService/NotifyPlayerEntryResponse")]
        void NotifyPlayerEntry(Blockus_Client.BlockusService.MatchDTO matchDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/NotifyPlayerExit", ReplyAction="http://tempuri.org/IMatchMakingService/NotifyPlayerExitResponse")]
        void NotifyPlayerExit(Blockus_Client.BlockusService.MatchDTO matchDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakingService/NotifyHostExit", ReplyAction="http://tempuri.org/IMatchMakingService/NotifyHostExitResponse")]
        void NotifyHostExit(Blockus_Client.BlockusService.MatchDTO matchDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchMakingServiceChannel : Blockus_Client.BlockusService.IMatchMakingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchMakingServiceClient : System.ServiceModel.DuplexClientBase<Blockus_Client.BlockusService.IMatchMakingService>, Blockus_Client.BlockusService.IMatchMakingService {
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchMakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Blockus_Client.BlockusService.MatchDTO CreateMatch(Blockus_Client.BlockusService.PublicAccountDTO hostAccount) {
            return base.Channel.CreateMatch(hostAccount);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> CreateMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO hostAccount) {
            return base.Channel.CreateMatchAsync(hostAccount);
        }
        
        public Blockus_Client.BlockusService.MatchDTO JoinToMatch(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode) {
            return base.Channel.JoinToMatch(account, matchCode);
        }
        
        public System.Threading.Tasks.Task<Blockus_Client.BlockusService.MatchDTO> JoinToMatchAsync(Blockus_Client.BlockusService.PublicAccountDTO account, string matchCode) {
            return base.Channel.JoinToMatchAsync(account, matchCode);
        }
        
        public void LeaveMatch(string username) {
            base.Channel.LeaveMatch(username);
        }
        
        public System.Threading.Tasks.Task LeaveMatchAsync(string username) {
            return base.Channel.LeaveMatchAsync(username);
        }
    }
}
